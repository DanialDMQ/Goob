package service_test

import (
	"context"
	"testing"

	"github.com/DanialDMQ/Goob/internal/service"
	pb "github.com/DanialDMQ/Goob/pkg/autogenerated"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/suite"
)

type serverSuite struct {
	suite.Suite
	server pb.MinerServiceServer
}

func (s *serverSuite) SetupTest() {
	s.server = service.New("000000")
}

func TestSimpleHashSuite(t *testing.T) {
	suite.Run(t, new(serverSuite))
}

func (s *serverSuite) TestGetNonce() {
	testTable := []struct {
		ctx     context.Context
		request *pb.MinerRequest
		nonce   int64
	}{
		{
			context.Background(),
			&pb.MinerRequest{Src: "dan", Dest: "iyal", Amount: 1, DateTime: 1, PrevHash: "1"},
			21526042,
		},
	}
	for _, tt := range testTable {
		response, _ := s.server.GetNonce(tt.ctx, tt.request)
		assert.Equal(s.T(), response.Nonce, tt.nonce)
	}
}
