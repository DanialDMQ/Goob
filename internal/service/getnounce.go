package service

import (
	"context"
	"fmt"

	pb "github.com/DanialDMQ/Goob/pkg/autogenerated"
	"github.com/DanialDMQ/Goob/pkg/hash"
)

type server struct {
	pb.UnimplementedMinerServiceServer
	hasher     hash.Hash
	lastNChars string
}

func (s *server) GetNonce(ctx context.Context, req *pb.MinerRequest,
) (res *pb.MinerResponse, e error) {
	var nonce int64
	for {
		record, err := s.hasher.GetRecord(req, nonce)
		if err != nil {
			return nil, err
		}
		hashedRecord, err := s.hasher.GetSha256(record)
		if err != nil {
			return nil, err
		}
		if hashedRecord[len(hashedRecord)-len(s.lastNChars):] == s.lastNChars {
			fmt.Println(hashedRecord)
			break
		}
		nonce += 1
	}
	return &pb.MinerResponse{Nonce: nonce}, nil
}

func New(lastNChars string) pb.MinerServiceServer {
	return &server{
		hasher:     hash.NewSimpleHash(),
		lastNChars: lastNChars,
	}
}
